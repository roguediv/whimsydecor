"use client"
import SetActive from '@/components/main/SetActive'
import { ReturnField } from '@/components/scripts/database/interface';
import { removeAllInputErrors } from '@/components/scripts/database/validation';
import { StartInfoForm, UpdateInfoForm } from '@/components/scripts/client/popup/InfoHandler';
import { Project, Testimonial, User } from '@prisma/client';
import Link from 'next/link';
import { FaLessThan } from 'react-icons/fa';
import { prismaExecutionService } from '@/components/scripts/database/PrismaExecutionService';
import { endClientQuery } from '@/components/scripts/database/clientQueries';

type props = {
  className?: string;
  page?: string;
  title?:string;
  desc?: string;
  src?: string;
  project?: Project | null;
  updateProject?: (Project: Project, imgFormData : FormData) => Promise<ReturnField>;
  testimonial?: Testimonial | null;
  updateTestimonial?: (Testimonial: Testimonial | null, imgFormData : FormData) => Promise<ReturnField>;
  user?: Partial<User> | null;
  updateUser?: (User: Partial<User>, formData : FormData) => Promise<ReturnField>;
}

const CMSHeader: React.FC<props> = ({className = '', page = "home", title = page, desc = "", src = "background.jpg", 
  project=null, updateProject = () => {return {status: -1, title: "Update project function not loaded.", desc: "", data: null}},
  testimonial=null, updateTestimonial = () => {return {status: -1, title: "Update testimonial function not loaded.", desc: "", data: null}},
  user=null, updateUser = () => {return {status: -1, title: "Update user function not loaded.", desc: "", data: null}},
}) => {
  if (page == 'home') {
    return (
      <>
        <SetActive activeText={page} />
        <header>
          <div className={`content`}>
            <div className="Logo">
              <svg width="84" height="57" viewBox="0 0 84 57" fill="none" xmlns="http://www.w3.org/2000/svg"><g filter="url(#filter0_d_440_1426)"><path fillRule="evenodd" clipRule="evenodd" d="M44.8203 8.16087L47.6454 9.5323C48.4597 9.92758 48.9767 10.7532 48.9767 11.6584V11.8144C48.9767 12.385 48.7345 12.9289 48.3103 13.3107C47.8861 13.6925 47.6439 14.2363 47.6439 14.807V15.2759C47.7178 15.3525 47.79 15.4306 47.8604 15.5103C48.1408 15.3432 48.3952 15.178 48.6113 15.0266C49.0176 14.7422 49.3991 14.4207 49.771 14.1073C50.1863 13.7572 50.5895 13.4174 51.0018 13.1508C51.2873 12.9661 51.5899 12.8019 51.8929 12.6375C52.4309 12.3456 52.9699 12.0532 53.415 11.6451C53.7644 11.3248 54.0594 10.9497 54.2884 10.5347L55.6219 8.11772C55.9212 7.57534 56.3241 7.09707 56.8078 6.7101C57.2025 6.39434 57.6653 6.17481 58.1596 6.0689L58.5583 5.98345C59.0292 5.88255 59.4708 5.67544 59.8495 5.37792L60.7546 4.66677C60.9962 4.47694 61.315 4.41652 61.6094 4.50481L61.6951 4.53052C62.1303 4.66109 62.3861 5.11071 62.2758 5.55155C62.2307 5.73224 62.1274 5.89311 61.982 6.00946L61.3967 6.47766C61.0519 6.75355 60.6516 6.95181 60.2231 7.05892L59.7823 7.16912C59.4444 7.2536 59.1168 7.3748 58.8053 7.53056C57.7352 8.06558 56.9051 8.98288 56.4792 10.1008L56.0752 11.1614L55.0089 13.1607L54.3545 14.0878C53.7406 14.9574 52.8648 15.608 51.855 15.9447C51.2964 16.1309 50.7751 16.4145 50.3153 16.7823L49.5973 17.3567C49.4581 17.4681 49.3218 17.5831 49.1887 17.7016L49.1978 17.7255L49.2116 17.7626L49.2187 17.782L67.161 11.3056C69.3095 10.5301 71.5764 10.1335 73.8606 10.1335H76.549C77.7574 10.1335 78.9502 10.407 80.0378 10.9335C81.0819 11.4388 81.4734 12.727 80.8871 13.7278L77.9653 18.716C77.3729 19.7273 76.4869 20.5344 75.4249 21.0301C74.6601 21.3871 73.8264 21.572 72.9824 21.572H70.6417C70.5237 21.572 70.4376 21.6837 70.4675 21.7978L70.612 22.3485C70.8208 23.1446 70.6824 23.992 70.231 24.6803C69.832 25.2887 69.2193 25.7253 68.514 25.9039L63.6622 27.1328C62.6771 27.3823 61.6649 27.5085 60.6488 27.5085C59.2853 27.5085 57.9314 27.2813 56.6426 26.8363L53.1384 25.6262L48.8007 24.2792C48.6678 24.2379 48.5399 24.1875 48.4175 24.1287C48.2961 24.3066 48.1667 24.479 48.0298 24.6455C49.8263 25.9635 52.2467 27.6134 52.935 27.6145C54.0095 27.6161 56.224 28.1649 56.8182 28.7775C57.2616 29.2346 57.2017 30.2827 57.1015 30.8463C57.0893 30.915 57.1185 30.9849 57.1775 31.0224C58.408 31.8037 59.0767 33.2253 58.8937 34.6715L58.7766 35.597C58.7656 35.6842 58.8068 35.7697 58.8819 35.8153L64.1819 39.0361C64.4496 39.1987 64.5966 39.5035 64.5573 39.8142C64.4951 40.3056 64.0031 40.6207 63.5307 40.4716L61.6063 39.8643C61.5993 39.8621 61.5929 39.8585 61.5874 39.8537L59.4164 37.9731L57.7325 36.4166L57.006 35.7873C56.2549 35.0129 55.8964 33.9391 56.0318 32.8688L56.081 32.4803C56.0837 32.4586 56.0778 32.4368 56.0644 32.4195L55.7764 32.048C55.6754 31.9178 55.549 31.8094 55.4048 31.7295L54.3679 31.1544C53.1977 30.6539 52.1744 29.8634 51.3945 28.8576L51.2709 28.6982C51.2223 28.6355 51.1653 28.5798 51.1016 28.5325L50.1822 27.8504C49.8545 27.6074 49.516 27.3797 49.1677 27.168C50.6374 28.9637 51.5882 31.3157 51.7489 33.9156L54.3814 36.2781C54.5967 36.4713 54.7868 36.6909 54.9473 36.9315L55.0196 37.04C55.5101 37.7758 55.7719 38.6404 55.7719 39.5247V39.7679V40.3211C55.7719 40.3909 55.81 40.4551 55.8713 40.4885L57.651 41.4593C58.3002 41.8134 58.7041 42.4938 58.7041 43.2332V44.1027C58.7041 44.2251 58.7673 44.3388 58.8713 44.4034L63.1908 47.0885C63.4674 47.2605 63.6356 47.5631 63.6356 47.8888C63.6356 48.4092 63.2137 48.8311 62.6933 48.8311H62.4964C62.2012 48.8311 61.9175 48.7165 61.7051 48.5115L58.2408 45.1666C58.1952 45.1226 58.138 45.0926 58.0759 45.0802L57.1051 44.886C56.9279 44.8506 56.7563 44.7917 56.5947 44.7109C56.0717 44.4494 55.6866 43.9754 55.5378 43.4099L55.1236 41.8361C55.1119 41.7915 55.0849 41.7525 55.0474 41.7257L54.8888 41.6124C54.4127 41.2723 53.975 40.8813 53.5836 40.4464L53.3287 40.1632C53.0923 39.9005 52.8863 39.6119 52.7147 39.303C52.4447 38.8171 52.2633 38.2871 52.1787 37.7377L52.0529 36.9194C52.0447 36.8662 52.0139 36.8191 51.9685 36.7901L51.6507 36.5879C50.9342 42.4035 47.1561 49.9071 42.5281 50.4038L41.9947 51.0967L41.4514 50.391C36.8936 49.7937 33.1815 42.4267 32.4462 36.6677L32.2539 36.7901C32.2085 36.8191 32.1777 36.8662 32.1695 36.9194L32.0436 37.7377C31.9591 38.2871 31.7776 38.8171 31.5077 39.303C31.3361 39.6119 31.1301 39.9005 30.8936 40.1632L30.6388 40.4464C30.2473 40.8813 29.8097 41.2723 29.3335 41.6124L29.1749 41.7257C29.1374 41.7525 29.1105 41.7915 29.0987 41.8361L28.6846 43.4099C28.5358 43.9754 28.1507 44.4494 27.6277 44.7109C27.4661 44.7917 27.2944 44.8506 27.1172 44.886L26.1465 45.0802C26.0844 45.0926 26.0272 45.1226 25.9816 45.1666L22.5172 48.5115C22.3049 48.7165 22.0212 48.8311 21.726 48.8311H21.5291C21.0087 48.8311 20.5868 48.4092 20.5868 47.8888C20.5868 47.5631 20.755 47.2605 21.0316 47.0885L25.3511 44.4034C25.455 44.3388 25.5182 44.2251 25.5182 44.1027V43.2332C25.5182 42.4938 25.9222 41.8134 26.5713 41.4593L28.3511 40.4885C28.4123 40.4551 28.4505 40.3909 28.4505 40.3211V39.7679V39.5247C28.4505 38.6404 28.7122 37.7758 29.2028 37.04L29.2751 36.9315C29.4356 36.6909 29.6257 36.4713 29.8409 36.2781L32.3308 34.0437C32.464 31.4649 33.3741 29.1235 34.7988 27.3178C34.5348 27.4861 34.2767 27.6637 34.025 27.8504L33.1055 28.5325C33.0418 28.5798 32.9849 28.6355 32.9363 28.6982L32.8127 28.8576C32.0328 29.8634 31.0095 30.6539 29.8393 31.1544L28.8024 31.7295C28.6582 31.8094 28.5318 31.9178 28.4308 32.048L28.1428 32.4195C28.1294 32.4368 28.1234 32.4586 28.1262 32.4803L28.1753 32.8688C28.3108 33.9391 27.9523 35.0129 27.2011 35.7873L26.4747 36.4166L24.7908 37.9731L22.6198 39.8537C22.6143 39.8585 22.6078 39.8621 22.6009 39.8643L20.6765 40.4716C20.2041 40.6207 19.7121 40.3056 19.6499 39.8142C19.6106 39.5035 19.7576 39.1987 20.0252 39.0361L25.3253 35.8153C25.4004 35.7697 25.4416 35.6842 25.4306 35.597L25.3135 34.6715C25.1305 33.2253 25.7991 31.8037 27.0297 31.0224C27.0887 30.9849 27.1179 30.915 27.1057 30.8463C27.0055 30.2827 26.9456 29.2346 27.389 28.7775C27.9832 28.1649 30.1977 27.6161 31.2722 27.6145C31.9725 27.6134 34.4659 25.9055 36.2708 24.5768C36.1355 24.4082 36.0078 24.2336 35.8882 24.0535C35.7228 24.1452 35.5461 24.2213 35.3595 24.2792L31.0218 25.6262L27.5176 26.8363C26.2288 27.2813 24.8749 27.5085 23.5115 27.5085C22.4953 27.5085 21.4831 27.3823 20.4981 27.1328L15.6462 25.9039C14.9409 25.7253 14.3283 25.2887 13.9293 24.6803C13.4779 23.992 13.3394 23.1446 13.5483 22.3485L13.6927 21.7978C13.7227 21.6837 13.6366 21.572 13.5186 21.572H11.1778C10.3339 21.572 9.50015 21.3871 8.7354 21.0301C7.67337 20.5344 6.78732 19.7273 6.19495 18.716L3.27313 13.7278C2.68687 12.727 3.07838 11.4388 4.12242 10.9335C5.21009 10.407 6.40281 10.1335 7.6112 10.1335H10.2997C12.5839 10.1335 14.8507 10.5301 16.9992 11.3056L35.115 17.8446C35.1255 17.8151 35.1362 17.7856 35.1471 17.7563C34.9947 17.6184 34.8381 17.4852 34.6775 17.3567L33.9596 16.7823C33.4998 16.4145 32.9785 16.1309 32.4198 15.9447C31.41 15.608 30.5342 14.9574 29.9203 14.0878L29.2659 13.1607L28.1996 11.1614L27.7956 10.1008C27.3697 8.98288 26.5396 8.06558 25.4695 7.53056C25.158 7.3748 24.8304 7.2536 24.4925 7.16912L24.0517 7.05892C23.6232 6.95181 23.2229 6.75355 22.8781 6.47766L22.2928 6.00946C22.1474 5.89311 22.0442 5.73224 21.999 5.55155C21.8888 5.11071 22.1445 4.66109 22.5798 4.53052L22.6655 4.50481C22.9598 4.41652 23.2786 4.47694 23.5202 4.66677L24.4254 5.37792C24.804 5.67544 25.2456 5.88255 25.7165 5.98345L26.1153 6.0689C26.6095 6.17481 27.0723 6.39434 27.467 6.7101C27.9507 7.09707 28.3536 7.57534 28.6529 8.11772L29.9864 10.5347C30.2154 10.9497 30.5104 11.3248 30.8598 11.6451C31.305 12.0532 31.8439 12.3456 32.382 12.6375L32.382 12.6375L32.382 12.6376L32.382 12.6376L32.382 12.6376C32.685 12.8019 32.9876 12.9662 33.2731 13.1508C33.6853 13.4174 34.0885 13.7572 34.5038 14.1073C34.8757 14.4207 35.2572 14.7422 35.6635 15.0266C35.8934 15.1875 36.1664 15.3642 36.468 15.5421C36.5053 15.4994 36.5431 15.4572 36.5814 15.4153V14.807C36.5814 14.2363 36.3391 13.6925 35.9149 13.3107C35.4907 12.9289 35.2485 12.385 35.2485 11.8144V11.6584C35.2485 10.7532 35.7655 9.92758 36.5798 9.5323L39.159 8.28027L30.227 1.49651C29.9372 1.27639 30.165 0.818041 30.5155 0.916169C31.6125 1.22332 32.6302 1.76359 33.4993 2.50008L39.8971 7.92196L41.8978 6.95073C42.0334 6.88489 42.1918 6.88489 42.3274 6.95073L44.0718 7.79752L50.3228 2.50008C51.1918 1.76359 52.2096 1.22332 53.3066 0.916169C53.657 0.818041 53.8849 1.27639 53.595 1.49651L44.8203 8.16087Z" fill="url(#paint0_linear_440_1426)"/></g><defs><filter id="filter0_d_440_1426" x="0.205071" y="0.902588" width="83.75" height="55.7839" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB"><feFlood floodOpacity="0" result="BackgroundImageFix"/><feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/><feOffset dy="2.79493"/><feGaussianBlur stdDeviation="1.39746"/><feComposite in2="hardAlpha" operator="out"/><feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/><feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_440_1426"/><feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_440_1426" result="shape"/></filter><linearGradient id="paint0_linear_440_1426" x1="3" y1="13.6105" x2="81.4509" y2="13.2572" gradientUnits="userSpaceOnUse"><stop stopColor="#8D7F61"/><stop offset="0.151457" stopColor="#F1DCAD"/><stop offset="0.267035" stopColor="#8E7B53"/><stop offset="0.382648" stopColor="#E5D9A9"/><stop offset="0.495657" stopColor="#8A724C"/><stop offset="0.620286" stopColor="#E5D9A9"/><stop offset="0.73364" stopColor="#8E7B53"/><stop offset="0.866263" stopColor="#F1DCAD"/><stop offset="1" stopColor="#8D7F61"/></linearGradient></defs></svg>
            </div>
            <h2>Workspace</h2>
          </div>
        </header>
      </>
    )
  } else if (page == 'projects') {
    return (
      <>
        <SetActive activeText={page} />
        <header>
          <div className={`content ${title == 'project' ? 'interactive' : ''}`}>
            <div className="Logo">
              <svg width="84" height="57" viewBox="0 0 84 57" fill="none" xmlns="http://www.w3.org/2000/svg"><g filter="url(#filter0_d_440_1426)"><path fillRule="evenodd" clipRule="evenodd" d="M44.8203 8.16087L47.6454 9.5323C48.4597 9.92758 48.9767 10.7532 48.9767 11.6584V11.8144C48.9767 12.385 48.7345 12.9289 48.3103 13.3107C47.8861 13.6925 47.6439 14.2363 47.6439 14.807V15.2759C47.7178 15.3525 47.79 15.4306 47.8604 15.5103C48.1408 15.3432 48.3952 15.178 48.6113 15.0266C49.0176 14.7422 49.3991 14.4207 49.771 14.1073C50.1863 13.7572 50.5895 13.4174 51.0018 13.1508C51.2873 12.9661 51.5899 12.8019 51.8929 12.6375C52.4309 12.3456 52.9699 12.0532 53.415 11.6451C53.7644 11.3248 54.0594 10.9497 54.2884 10.5347L55.6219 8.11772C55.9212 7.57534 56.3241 7.09707 56.8078 6.7101C57.2025 6.39434 57.6653 6.17481 58.1596 6.0689L58.5583 5.98345C59.0292 5.88255 59.4708 5.67544 59.8495 5.37792L60.7546 4.66677C60.9962 4.47694 61.315 4.41652 61.6094 4.50481L61.6951 4.53052C62.1303 4.66109 62.3861 5.11071 62.2758 5.55155C62.2307 5.73224 62.1274 5.89311 61.982 6.00946L61.3967 6.47766C61.0519 6.75355 60.6516 6.95181 60.2231 7.05892L59.7823 7.16912C59.4444 7.2536 59.1168 7.3748 58.8053 7.53056C57.7352 8.06558 56.9051 8.98288 56.4792 10.1008L56.0752 11.1614L55.0089 13.1607L54.3545 14.0878C53.7406 14.9574 52.8648 15.608 51.855 15.9447C51.2964 16.1309 50.7751 16.4145 50.3153 16.7823L49.5973 17.3567C49.4581 17.4681 49.3218 17.5831 49.1887 17.7016L49.1978 17.7255L49.2116 17.7626L49.2187 17.782L67.161 11.3056C69.3095 10.5301 71.5764 10.1335 73.8606 10.1335H76.549C77.7574 10.1335 78.9502 10.407 80.0378 10.9335C81.0819 11.4388 81.4734 12.727 80.8871 13.7278L77.9653 18.716C77.3729 19.7273 76.4869 20.5344 75.4249 21.0301C74.6601 21.3871 73.8264 21.572 72.9824 21.572H70.6417C70.5237 21.572 70.4376 21.6837 70.4675 21.7978L70.612 22.3485C70.8208 23.1446 70.6824 23.992 70.231 24.6803C69.832 25.2887 69.2193 25.7253 68.514 25.9039L63.6622 27.1328C62.6771 27.3823 61.6649 27.5085 60.6488 27.5085C59.2853 27.5085 57.9314 27.2813 56.6426 26.8363L53.1384 25.6262L48.8007 24.2792C48.6678 24.2379 48.5399 24.1875 48.4175 24.1287C48.2961 24.3066 48.1667 24.479 48.0298 24.6455C49.8263 25.9635 52.2467 27.6134 52.935 27.6145C54.0095 27.6161 56.224 28.1649 56.8182 28.7775C57.2616 29.2346 57.2017 30.2827 57.1015 30.8463C57.0893 30.915 57.1185 30.9849 57.1775 31.0224C58.408 31.8037 59.0767 33.2253 58.8937 34.6715L58.7766 35.597C58.7656 35.6842 58.8068 35.7697 58.8819 35.8153L64.1819 39.0361C64.4496 39.1987 64.5966 39.5035 64.5573 39.8142C64.4951 40.3056 64.0031 40.6207 63.5307 40.4716L61.6063 39.8643C61.5993 39.8621 61.5929 39.8585 61.5874 39.8537L59.4164 37.9731L57.7325 36.4166L57.006 35.7873C56.2549 35.0129 55.8964 33.9391 56.0318 32.8688L56.081 32.4803C56.0837 32.4586 56.0778 32.4368 56.0644 32.4195L55.7764 32.048C55.6754 31.9178 55.549 31.8094 55.4048 31.7295L54.3679 31.1544C53.1977 30.6539 52.1744 29.8634 51.3945 28.8576L51.2709 28.6982C51.2223 28.6355 51.1653 28.5798 51.1016 28.5325L50.1822 27.8504C49.8545 27.6074 49.516 27.3797 49.1677 27.168C50.6374 28.9637 51.5882 31.3157 51.7489 33.9156L54.3814 36.2781C54.5967 36.4713 54.7868 36.6909 54.9473 36.9315L55.0196 37.04C55.5101 37.7758 55.7719 38.6404 55.7719 39.5247V39.7679V40.3211C55.7719 40.3909 55.81 40.4551 55.8713 40.4885L57.651 41.4593C58.3002 41.8134 58.7041 42.4938 58.7041 43.2332V44.1027C58.7041 44.2251 58.7673 44.3388 58.8713 44.4034L63.1908 47.0885C63.4674 47.2605 63.6356 47.5631 63.6356 47.8888C63.6356 48.4092 63.2137 48.8311 62.6933 48.8311H62.4964C62.2012 48.8311 61.9175 48.7165 61.7051 48.5115L58.2408 45.1666C58.1952 45.1226 58.138 45.0926 58.0759 45.0802L57.1051 44.886C56.9279 44.8506 56.7563 44.7917 56.5947 44.7109C56.0717 44.4494 55.6866 43.9754 55.5378 43.4099L55.1236 41.8361C55.1119 41.7915 55.0849 41.7525 55.0474 41.7257L54.8888 41.6124C54.4127 41.2723 53.975 40.8813 53.5836 40.4464L53.3287 40.1632C53.0923 39.9005 52.8863 39.6119 52.7147 39.303C52.4447 38.8171 52.2633 38.2871 52.1787 37.7377L52.0529 36.9194C52.0447 36.8662 52.0139 36.8191 51.9685 36.7901L51.6507 36.5879C50.9342 42.4035 47.1561 49.9071 42.5281 50.4038L41.9947 51.0967L41.4514 50.391C36.8936 49.7937 33.1815 42.4267 32.4462 36.6677L32.2539 36.7901C32.2085 36.8191 32.1777 36.8662 32.1695 36.9194L32.0436 37.7377C31.9591 38.2871 31.7776 38.8171 31.5077 39.303C31.3361 39.6119 31.1301 39.9005 30.8936 40.1632L30.6388 40.4464C30.2473 40.8813 29.8097 41.2723 29.3335 41.6124L29.1749 41.7257C29.1374 41.7525 29.1105 41.7915 29.0987 41.8361L28.6846 43.4099C28.5358 43.9754 28.1507 44.4494 27.6277 44.7109C27.4661 44.7917 27.2944 44.8506 27.1172 44.886L26.1465 45.0802C26.0844 45.0926 26.0272 45.1226 25.9816 45.1666L22.5172 48.5115C22.3049 48.7165 22.0212 48.8311 21.726 48.8311H21.5291C21.0087 48.8311 20.5868 48.4092 20.5868 47.8888C20.5868 47.5631 20.755 47.2605 21.0316 47.0885L25.3511 44.4034C25.455 44.3388 25.5182 44.2251 25.5182 44.1027V43.2332C25.5182 42.4938 25.9222 41.8134 26.5713 41.4593L28.3511 40.4885C28.4123 40.4551 28.4505 40.3909 28.4505 40.3211V39.7679V39.5247C28.4505 38.6404 28.7122 37.7758 29.2028 37.04L29.2751 36.9315C29.4356 36.6909 29.6257 36.4713 29.8409 36.2781L32.3308 34.0437C32.464 31.4649 33.3741 29.1235 34.7988 27.3178C34.5348 27.4861 34.2767 27.6637 34.025 27.8504L33.1055 28.5325C33.0418 28.5798 32.9849 28.6355 32.9363 28.6982L32.8127 28.8576C32.0328 29.8634 31.0095 30.6539 29.8393 31.1544L28.8024 31.7295C28.6582 31.8094 28.5318 31.9178 28.4308 32.048L28.1428 32.4195C28.1294 32.4368 28.1234 32.4586 28.1262 32.4803L28.1753 32.8688C28.3108 33.9391 27.9523 35.0129 27.2011 35.7873L26.4747 36.4166L24.7908 37.9731L22.6198 39.8537C22.6143 39.8585 22.6078 39.8621 22.6009 39.8643L20.6765 40.4716C20.2041 40.6207 19.7121 40.3056 19.6499 39.8142C19.6106 39.5035 19.7576 39.1987 20.0252 39.0361L25.3253 35.8153C25.4004 35.7697 25.4416 35.6842 25.4306 35.597L25.3135 34.6715C25.1305 33.2253 25.7991 31.8037 27.0297 31.0224C27.0887 30.9849 27.1179 30.915 27.1057 30.8463C27.0055 30.2827 26.9456 29.2346 27.389 28.7775C27.9832 28.1649 30.1977 27.6161 31.2722 27.6145C31.9725 27.6134 34.4659 25.9055 36.2708 24.5768C36.1355 24.4082 36.0078 24.2336 35.8882 24.0535C35.7228 24.1452 35.5461 24.2213 35.3595 24.2792L31.0218 25.6262L27.5176 26.8363C26.2288 27.2813 24.8749 27.5085 23.5115 27.5085C22.4953 27.5085 21.4831 27.3823 20.4981 27.1328L15.6462 25.9039C14.9409 25.7253 14.3283 25.2887 13.9293 24.6803C13.4779 23.992 13.3394 23.1446 13.5483 22.3485L13.6927 21.7978C13.7227 21.6837 13.6366 21.572 13.5186 21.572H11.1778C10.3339 21.572 9.50015 21.3871 8.7354 21.0301C7.67337 20.5344 6.78732 19.7273 6.19495 18.716L3.27313 13.7278C2.68687 12.727 3.07838 11.4388 4.12242 10.9335C5.21009 10.407 6.40281 10.1335 7.6112 10.1335H10.2997C12.5839 10.1335 14.8507 10.5301 16.9992 11.3056L35.115 17.8446C35.1255 17.8151 35.1362 17.7856 35.1471 17.7563C34.9947 17.6184 34.8381 17.4852 34.6775 17.3567L33.9596 16.7823C33.4998 16.4145 32.9785 16.1309 32.4198 15.9447C31.41 15.608 30.5342 14.9574 29.9203 14.0878L29.2659 13.1607L28.1996 11.1614L27.7956 10.1008C27.3697 8.98288 26.5396 8.06558 25.4695 7.53056C25.158 7.3748 24.8304 7.2536 24.4925 7.16912L24.0517 7.05892C23.6232 6.95181 23.2229 6.75355 22.8781 6.47766L22.2928 6.00946C22.1474 5.89311 22.0442 5.73224 21.999 5.55155C21.8888 5.11071 22.1445 4.66109 22.5798 4.53052L22.6655 4.50481C22.9598 4.41652 23.2786 4.47694 23.5202 4.66677L24.4254 5.37792C24.804 5.67544 25.2456 5.88255 25.7165 5.98345L26.1153 6.0689C26.6095 6.17481 27.0723 6.39434 27.467 6.7101C27.9507 7.09707 28.3536 7.57534 28.6529 8.11772L29.9864 10.5347C30.2154 10.9497 30.5104 11.3248 30.8598 11.6451C31.305 12.0532 31.8439 12.3456 32.382 12.6375L32.382 12.6375L32.382 12.6376L32.382 12.6376L32.382 12.6376C32.685 12.8019 32.9876 12.9662 33.2731 13.1508C33.6853 13.4174 34.0885 13.7572 34.5038 14.1073C34.8757 14.4207 35.2572 14.7422 35.6635 15.0266C35.8934 15.1875 36.1664 15.3642 36.468 15.5421C36.5053 15.4994 36.5431 15.4572 36.5814 15.4153V14.807C36.5814 14.2363 36.3391 13.6925 35.9149 13.3107C35.4907 12.9289 35.2485 12.385 35.2485 11.8144V11.6584C35.2485 10.7532 35.7655 9.92758 36.5798 9.5323L39.159 8.28027L30.227 1.49651C29.9372 1.27639 30.165 0.818041 30.5155 0.916169C31.6125 1.22332 32.6302 1.76359 33.4993 2.50008L39.8971 7.92196L41.8978 6.95073C42.0334 6.88489 42.1918 6.88489 42.3274 6.95073L44.0718 7.79752L50.3228 2.50008C51.1918 1.76359 52.2096 1.22332 53.3066 0.916169C53.657 0.818041 53.8849 1.27639 53.595 1.49651L44.8203 8.16087Z" fill="url(#paint0_linear_440_1426)"/></g><defs><filter id="filter0_d_440_1426" x="0.205071" y="0.902588" width="83.75" height="55.7839" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB"><feFlood floodOpacity="0" result="BackgroundImageFix"/><feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/><feOffset dy="2.79493"/><feGaussianBlur stdDeviation="1.39746"/><feComposite in2="hardAlpha" operator="out"/><feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/><feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_440_1426"/><feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_440_1426" result="shape"/></filter><linearGradient id="paint0_linear_440_1426" x1="3" y1="13.6105" x2="81.4509" y2="13.2572" gradientUnits="userSpaceOnUse"><stop stopColor="#8D7F61"/><stop offset="0.151457" stopColor="#F1DCAD"/><stop offset="0.267035" stopColor="#8E7B53"/><stop offset="0.382648" stopColor="#E5D9A9"/><stop offset="0.495657" stopColor="#8A724C"/><stop offset="0.620286" stopColor="#E5D9A9"/><stop offset="0.73364" stopColor="#8E7B53"/><stop offset="0.866263" stopColor="#F1DCAD"/><stop offset="1" stopColor="#8D7F61"/></linearGradient></defs></svg>
            </div>
            {title == 'project' ? <Link href='/dashboard/projects'><FaLessThan /></Link> : ''}
            <h2>{title.charAt(0).toUpperCase() + title.slice(1)}</h2>
            {title == 'project' ? <button className='gold' onClick={async () => {
              if (!prismaExecutionService.startQuery()) return endClientQuery("Server is Busy", "There may already be a query running. Please try again later.");
              removeAllInputErrors();
              if (!project) return endClientQuery("Project not Found", "There is no project to update. Please refresh the page and try again."); // return if project is invalid

              /// Set up variables for data inputs
              let Project : Project = project;
              const iptProjectTitle : HTMLInputElement = document.getElementById('iptProjectTitle') as HTMLInputElement;
              const iptProjectShortDesc : HTMLInputElement = document.getElementById('iptProjectShortDesc') as HTMLInputElement;
              const iptProjectLongDesc : HTMLInputElement = document.getElementById('iptProjectLongDesc') as HTMLInputElement;
              const iptProjectIsLive : HTMLInputElement = document.getElementById('iptProjectIsLive') as HTMLInputElement;
              const iptProjectIsFeatured : HTMLInputElement = document.getElementById('iptProjectIsFeatured') as HTMLInputElement;
              const iptProjectServices = document.querySelectorAll<HTMLButtonElement>('#iptProjectService button.active')

              const imgFormData = new FormData();
              for (let i = 1; i <= 9; i++) {
                const imgElement = document.getElementById(`iptProjectImg${i}`) as HTMLInputElement;
                const imgTextElement = document.getElementById(`iptProjectImg${i}Desc`) as HTMLInputElement;
                if (imgElement && imgElement.files && imgElement.files.length > 0) imgFormData.append(`img${i}`, imgElement.files[0]);
                if (imgTextElement && imgTextElement.value != '') imgFormData.append(`img${i}Desc`, imgTextElement.value);
              }
              let servicesString = ''
              for (let i = 0; i < iptProjectServices.length; i++) {
                const buttonText = iptProjectServices[i].innerText;
                servicesString += buttonText;
                if (i !== iptProjectServices.length - 1) {
                  servicesString += '|,';
                } 
              }

              /// Update new project values
              if (iptProjectTitle) Project.title = iptProjectTitle.value;
              if (iptProjectShortDesc) Project.shortDesc = iptProjectShortDesc.value;
              if (iptProjectLongDesc) Project.longDesc = iptProjectLongDesc.value;
              if (iptProjectIsLive) Project.isLive = iptProjectIsLive.checked;
              if (iptProjectIsFeatured) Project.isFeatured = iptProjectIsFeatured.checked;
              if (iptProjectServices) Project.services = servicesString;
              
              StartInfoForm({title: "Project is Updating", desc: "Please wait while your project finishes updating..."});
              let rtn :ReturnField = await updateProject(Project, imgFormData) as ReturnField;
              if (rtn.status == 1) UpdateInfoForm({title: rtn.title, desc: rtn.desc}, true, true);
              else {
                UpdateInfoForm({title: rtn.title, desc: rtn.desc}, true, false);
                if (rtn.title.includes('Title')) iptProjectTitle.classList.add('inputError');
                if (rtn.title.includes('Summary')) iptProjectShortDesc.classList.add('inputError');
                if (rtn.title.includes('Description')) iptProjectLongDesc.classList.add('inputError');
              }
              endClientQuery("end");
              prismaExecutionService.endQuery();
            }}>Publish</button> : ''}
          </div>
        </header>
      </>
    )
  } else if (page === 'testimonial') {
    return (
      <>
        <SetActive activeText={page} />
        <header>
          <div className={`content interactive noBack`}>
            <div className="Logo">
              <svg width="84" height="57" viewBox="0 0 84 57" fill="none" xmlns="http://www.w3.org/2000/svg"><g filter="url(#filter0_d_440_1426)"><path fillRule="evenodd" clipRule="evenodd" d="M44.8203 8.16087L47.6454 9.5323C48.4597 9.92758 48.9767 10.7532 48.9767 11.6584V11.8144C48.9767 12.385 48.7345 12.9289 48.3103 13.3107C47.8861 13.6925 47.6439 14.2363 47.6439 14.807V15.2759C47.7178 15.3525 47.79 15.4306 47.8604 15.5103C48.1408 15.3432 48.3952 15.178 48.6113 15.0266C49.0176 14.7422 49.3991 14.4207 49.771 14.1073C50.1863 13.7572 50.5895 13.4174 51.0018 13.1508C51.2873 12.9661 51.5899 12.8019 51.8929 12.6375C52.4309 12.3456 52.9699 12.0532 53.415 11.6451C53.7644 11.3248 54.0594 10.9497 54.2884 10.5347L55.6219 8.11772C55.9212 7.57534 56.3241 7.09707 56.8078 6.7101C57.2025 6.39434 57.6653 6.17481 58.1596 6.0689L58.5583 5.98345C59.0292 5.88255 59.4708 5.67544 59.8495 5.37792L60.7546 4.66677C60.9962 4.47694 61.315 4.41652 61.6094 4.50481L61.6951 4.53052C62.1303 4.66109 62.3861 5.11071 62.2758 5.55155C62.2307 5.73224 62.1274 5.89311 61.982 6.00946L61.3967 6.47766C61.0519 6.75355 60.6516 6.95181 60.2231 7.05892L59.7823 7.16912C59.4444 7.2536 59.1168 7.3748 58.8053 7.53056C57.7352 8.06558 56.9051 8.98288 56.4792 10.1008L56.0752 11.1614L55.0089 13.1607L54.3545 14.0878C53.7406 14.9574 52.8648 15.608 51.855 15.9447C51.2964 16.1309 50.7751 16.4145 50.3153 16.7823L49.5973 17.3567C49.4581 17.4681 49.3218 17.5831 49.1887 17.7016L49.1978 17.7255L49.2116 17.7626L49.2187 17.782L67.161 11.3056C69.3095 10.5301 71.5764 10.1335 73.8606 10.1335H76.549C77.7574 10.1335 78.9502 10.407 80.0378 10.9335C81.0819 11.4388 81.4734 12.727 80.8871 13.7278L77.9653 18.716C77.3729 19.7273 76.4869 20.5344 75.4249 21.0301C74.6601 21.3871 73.8264 21.572 72.9824 21.572H70.6417C70.5237 21.572 70.4376 21.6837 70.4675 21.7978L70.612 22.3485C70.8208 23.1446 70.6824 23.992 70.231 24.6803C69.832 25.2887 69.2193 25.7253 68.514 25.9039L63.6622 27.1328C62.6771 27.3823 61.6649 27.5085 60.6488 27.5085C59.2853 27.5085 57.9314 27.2813 56.6426 26.8363L53.1384 25.6262L48.8007 24.2792C48.6678 24.2379 48.5399 24.1875 48.4175 24.1287C48.2961 24.3066 48.1667 24.479 48.0298 24.6455C49.8263 25.9635 52.2467 27.6134 52.935 27.6145C54.0095 27.6161 56.224 28.1649 56.8182 28.7775C57.2616 29.2346 57.2017 30.2827 57.1015 30.8463C57.0893 30.915 57.1185 30.9849 57.1775 31.0224C58.408 31.8037 59.0767 33.2253 58.8937 34.6715L58.7766 35.597C58.7656 35.6842 58.8068 35.7697 58.8819 35.8153L64.1819 39.0361C64.4496 39.1987 64.5966 39.5035 64.5573 39.8142C64.4951 40.3056 64.0031 40.6207 63.5307 40.4716L61.6063 39.8643C61.5993 39.8621 61.5929 39.8585 61.5874 39.8537L59.4164 37.9731L57.7325 36.4166L57.006 35.7873C56.2549 35.0129 55.8964 33.9391 56.0318 32.8688L56.081 32.4803C56.0837 32.4586 56.0778 32.4368 56.0644 32.4195L55.7764 32.048C55.6754 31.9178 55.549 31.8094 55.4048 31.7295L54.3679 31.1544C53.1977 30.6539 52.1744 29.8634 51.3945 28.8576L51.2709 28.6982C51.2223 28.6355 51.1653 28.5798 51.1016 28.5325L50.1822 27.8504C49.8545 27.6074 49.516 27.3797 49.1677 27.168C50.6374 28.9637 51.5882 31.3157 51.7489 33.9156L54.3814 36.2781C54.5967 36.4713 54.7868 36.6909 54.9473 36.9315L55.0196 37.04C55.5101 37.7758 55.7719 38.6404 55.7719 39.5247V39.7679V40.3211C55.7719 40.3909 55.81 40.4551 55.8713 40.4885L57.651 41.4593C58.3002 41.8134 58.7041 42.4938 58.7041 43.2332V44.1027C58.7041 44.2251 58.7673 44.3388 58.8713 44.4034L63.1908 47.0885C63.4674 47.2605 63.6356 47.5631 63.6356 47.8888C63.6356 48.4092 63.2137 48.8311 62.6933 48.8311H62.4964C62.2012 48.8311 61.9175 48.7165 61.7051 48.5115L58.2408 45.1666C58.1952 45.1226 58.138 45.0926 58.0759 45.0802L57.1051 44.886C56.9279 44.8506 56.7563 44.7917 56.5947 44.7109C56.0717 44.4494 55.6866 43.9754 55.5378 43.4099L55.1236 41.8361C55.1119 41.7915 55.0849 41.7525 55.0474 41.7257L54.8888 41.6124C54.4127 41.2723 53.975 40.8813 53.5836 40.4464L53.3287 40.1632C53.0923 39.9005 52.8863 39.6119 52.7147 39.303C52.4447 38.8171 52.2633 38.2871 52.1787 37.7377L52.0529 36.9194C52.0447 36.8662 52.0139 36.8191 51.9685 36.7901L51.6507 36.5879C50.9342 42.4035 47.1561 49.9071 42.5281 50.4038L41.9947 51.0967L41.4514 50.391C36.8936 49.7937 33.1815 42.4267 32.4462 36.6677L32.2539 36.7901C32.2085 36.8191 32.1777 36.8662 32.1695 36.9194L32.0436 37.7377C31.9591 38.2871 31.7776 38.8171 31.5077 39.303C31.3361 39.6119 31.1301 39.9005 30.8936 40.1632L30.6388 40.4464C30.2473 40.8813 29.8097 41.2723 29.3335 41.6124L29.1749 41.7257C29.1374 41.7525 29.1105 41.7915 29.0987 41.8361L28.6846 43.4099C28.5358 43.9754 28.1507 44.4494 27.6277 44.7109C27.4661 44.7917 27.2944 44.8506 27.1172 44.886L26.1465 45.0802C26.0844 45.0926 26.0272 45.1226 25.9816 45.1666L22.5172 48.5115C22.3049 48.7165 22.0212 48.8311 21.726 48.8311H21.5291C21.0087 48.8311 20.5868 48.4092 20.5868 47.8888C20.5868 47.5631 20.755 47.2605 21.0316 47.0885L25.3511 44.4034C25.455 44.3388 25.5182 44.2251 25.5182 44.1027V43.2332C25.5182 42.4938 25.9222 41.8134 26.5713 41.4593L28.3511 40.4885C28.4123 40.4551 28.4505 40.3909 28.4505 40.3211V39.7679V39.5247C28.4505 38.6404 28.7122 37.7758 29.2028 37.04L29.2751 36.9315C29.4356 36.6909 29.6257 36.4713 29.8409 36.2781L32.3308 34.0437C32.464 31.4649 33.3741 29.1235 34.7988 27.3178C34.5348 27.4861 34.2767 27.6637 34.025 27.8504L33.1055 28.5325C33.0418 28.5798 32.9849 28.6355 32.9363 28.6982L32.8127 28.8576C32.0328 29.8634 31.0095 30.6539 29.8393 31.1544L28.8024 31.7295C28.6582 31.8094 28.5318 31.9178 28.4308 32.048L28.1428 32.4195C28.1294 32.4368 28.1234 32.4586 28.1262 32.4803L28.1753 32.8688C28.3108 33.9391 27.9523 35.0129 27.2011 35.7873L26.4747 36.4166L24.7908 37.9731L22.6198 39.8537C22.6143 39.8585 22.6078 39.8621 22.6009 39.8643L20.6765 40.4716C20.2041 40.6207 19.7121 40.3056 19.6499 39.8142C19.6106 39.5035 19.7576 39.1987 20.0252 39.0361L25.3253 35.8153C25.4004 35.7697 25.4416 35.6842 25.4306 35.597L25.3135 34.6715C25.1305 33.2253 25.7991 31.8037 27.0297 31.0224C27.0887 30.9849 27.1179 30.915 27.1057 30.8463C27.0055 30.2827 26.9456 29.2346 27.389 28.7775C27.9832 28.1649 30.1977 27.6161 31.2722 27.6145C31.9725 27.6134 34.4659 25.9055 36.2708 24.5768C36.1355 24.4082 36.0078 24.2336 35.8882 24.0535C35.7228 24.1452 35.5461 24.2213 35.3595 24.2792L31.0218 25.6262L27.5176 26.8363C26.2288 27.2813 24.8749 27.5085 23.5115 27.5085C22.4953 27.5085 21.4831 27.3823 20.4981 27.1328L15.6462 25.9039C14.9409 25.7253 14.3283 25.2887 13.9293 24.6803C13.4779 23.992 13.3394 23.1446 13.5483 22.3485L13.6927 21.7978C13.7227 21.6837 13.6366 21.572 13.5186 21.572H11.1778C10.3339 21.572 9.50015 21.3871 8.7354 21.0301C7.67337 20.5344 6.78732 19.7273 6.19495 18.716L3.27313 13.7278C2.68687 12.727 3.07838 11.4388 4.12242 10.9335C5.21009 10.407 6.40281 10.1335 7.6112 10.1335H10.2997C12.5839 10.1335 14.8507 10.5301 16.9992 11.3056L35.115 17.8446C35.1255 17.8151 35.1362 17.7856 35.1471 17.7563C34.9947 17.6184 34.8381 17.4852 34.6775 17.3567L33.9596 16.7823C33.4998 16.4145 32.9785 16.1309 32.4198 15.9447C31.41 15.608 30.5342 14.9574 29.9203 14.0878L29.2659 13.1607L28.1996 11.1614L27.7956 10.1008C27.3697 8.98288 26.5396 8.06558 25.4695 7.53056C25.158 7.3748 24.8304 7.2536 24.4925 7.16912L24.0517 7.05892C23.6232 6.95181 23.2229 6.75355 22.8781 6.47766L22.2928 6.00946C22.1474 5.89311 22.0442 5.73224 21.999 5.55155C21.8888 5.11071 22.1445 4.66109 22.5798 4.53052L22.6655 4.50481C22.9598 4.41652 23.2786 4.47694 23.5202 4.66677L24.4254 5.37792C24.804 5.67544 25.2456 5.88255 25.7165 5.98345L26.1153 6.0689C26.6095 6.17481 27.0723 6.39434 27.467 6.7101C27.9507 7.09707 28.3536 7.57534 28.6529 8.11772L29.9864 10.5347C30.2154 10.9497 30.5104 11.3248 30.8598 11.6451C31.305 12.0532 31.8439 12.3456 32.382 12.6375L32.382 12.6375L32.382 12.6376L32.382 12.6376L32.382 12.6376C32.685 12.8019 32.9876 12.9662 33.2731 13.1508C33.6853 13.4174 34.0885 13.7572 34.5038 14.1073C34.8757 14.4207 35.2572 14.7422 35.6635 15.0266C35.8934 15.1875 36.1664 15.3642 36.468 15.5421C36.5053 15.4994 36.5431 15.4572 36.5814 15.4153V14.807C36.5814 14.2363 36.3391 13.6925 35.9149 13.3107C35.4907 12.9289 35.2485 12.385 35.2485 11.8144V11.6584C35.2485 10.7532 35.7655 9.92758 36.5798 9.5323L39.159 8.28027L30.227 1.49651C29.9372 1.27639 30.165 0.818041 30.5155 0.916169C31.6125 1.22332 32.6302 1.76359 33.4993 2.50008L39.8971 7.92196L41.8978 6.95073C42.0334 6.88489 42.1918 6.88489 42.3274 6.95073L44.0718 7.79752L50.3228 2.50008C51.1918 1.76359 52.2096 1.22332 53.3066 0.916169C53.657 0.818041 53.8849 1.27639 53.595 1.49651L44.8203 8.16087Z" fill="url(#paint0_linear_440_1426)"/></g><defs><filter id="filter0_d_440_1426" x="0.205071" y="0.902588" width="83.75" height="55.7839" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB"><feFlood floodOpacity="0" result="BackgroundImageFix"/><feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/><feOffset dy="2.79493"/><feGaussianBlur stdDeviation="1.39746"/><feComposite in2="hardAlpha" operator="out"/><feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/><feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_440_1426"/><feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_440_1426" result="shape"/></filter><linearGradient id="paint0_linear_440_1426" x1="3" y1="13.6105" x2="81.4509" y2="13.2572" gradientUnits="userSpaceOnUse"><stop stopColor="#8D7F61"/><stop offset="0.151457" stopColor="#F1DCAD"/><stop offset="0.267035" stopColor="#8E7B53"/><stop offset="0.382648" stopColor="#E5D9A9"/><stop offset="0.495657" stopColor="#8A724C"/><stop offset="0.620286" stopColor="#E5D9A9"/><stop offset="0.73364" stopColor="#8E7B53"/><stop offset="0.866263" stopColor="#F1DCAD"/><stop offset="1" stopColor="#8D7F61"/></linearGradient></defs></svg>
            </div>
            <h2>{title.charAt(0).toUpperCase() + title.slice(1)}</h2>
            <button className='gold' onClick={async () => {
              if (!prismaExecutionService.startQuery()) return endClientQuery("Server is Busy", "There may already be a query running. Please try again later.");
              removeAllInputErrors();
              /// Set up variables for data inputs
              const iptTestimonialTitle : HTMLInputElement = document.getElementById('iptTestimonialTitle') as HTMLInputElement;
              const iptTestimonialDesc : HTMLTextAreaElement = document.getElementById('iptTestimonialDesc') as HTMLTextAreaElement;
              const iptTestimonialName : HTMLInputElement = document.getElementById('iptTestimonialName') as HTMLInputElement;
              
              /// Update new testimonial values
              if (!testimonial) return endClientQuery("Missing Testimonial", "Please contact the website administrator to fix this issue.")
                let Testimonial : Testimonial = testimonial;
              if (iptTestimonialTitle) Testimonial.title = iptTestimonialTitle.value;
              if (iptTestimonialDesc) Testimonial.desc = iptTestimonialDesc.value;
              if (iptTestimonialName) Testimonial.name = iptTestimonialName.value;

              const imgFormData = new FormData();
              const imgElement = document.getElementById(`iptTestimonialImg1`) as HTMLInputElement;
              const imgTextElement = document.getElementById(`iptTestimonialImg1Desc`) as HTMLInputElement;
              if (imgElement && imgElement.files && imgElement.files.length > 0) imgFormData.append(`img1`, imgElement.files[0]);
              if (imgTextElement && imgTextElement.value != '') imgFormData.append(`img1Desc`, imgTextElement.value);
              
              StartInfoForm({title: "Testimonial is Updating", desc: "Please wait while the testimonial finishes updating..."});
              let rtn :ReturnField = await updateTestimonial(Testimonial, imgFormData) as ReturnField;
              if (rtn.status == 1) UpdateInfoForm({title: rtn.title, desc: rtn.desc}, true, true);
              else {
                UpdateInfoForm({title: rtn.title, desc: rtn.desc}, true, false);
                if (rtn.title.includes('Title')) iptTestimonialTitle.classList.add('inputError');
                if (rtn.title.includes('Description')) iptTestimonialDesc.classList.add('inputError');
                if (rtn.title.includes('Name')) iptTestimonialName.classList.add('inputError');
              }
              endClientQuery("end");
            }}>Update</button>
          </div>
        </header>
      </>
    )
  } else if (page == "settings") {
    return (<>
      <SetActive activeText={page} />
      <header>
        <div className={`content interactive noBack`}>
          <div className="Logo">
            <svg width="84" height="57" viewBox="0 0 84 57" fill="none" xmlns="http://www.w3.org/2000/svg"><g filter="url(#filter0_d_440_1426)"><path fillRule="evenodd" clipRule="evenodd" d="M44.8203 8.16087L47.6454 9.5323C48.4597 9.92758 48.9767 10.7532 48.9767 11.6584V11.8144C48.9767 12.385 48.7345 12.9289 48.3103 13.3107C47.8861 13.6925 47.6439 14.2363 47.6439 14.807V15.2759C47.7178 15.3525 47.79 15.4306 47.8604 15.5103C48.1408 15.3432 48.3952 15.178 48.6113 15.0266C49.0176 14.7422 49.3991 14.4207 49.771 14.1073C50.1863 13.7572 50.5895 13.4174 51.0018 13.1508C51.2873 12.9661 51.5899 12.8019 51.8929 12.6375C52.4309 12.3456 52.9699 12.0532 53.415 11.6451C53.7644 11.3248 54.0594 10.9497 54.2884 10.5347L55.6219 8.11772C55.9212 7.57534 56.3241 7.09707 56.8078 6.7101C57.2025 6.39434 57.6653 6.17481 58.1596 6.0689L58.5583 5.98345C59.0292 5.88255 59.4708 5.67544 59.8495 5.37792L60.7546 4.66677C60.9962 4.47694 61.315 4.41652 61.6094 4.50481L61.6951 4.53052C62.1303 4.66109 62.3861 5.11071 62.2758 5.55155C62.2307 5.73224 62.1274 5.89311 61.982 6.00946L61.3967 6.47766C61.0519 6.75355 60.6516 6.95181 60.2231 7.05892L59.7823 7.16912C59.4444 7.2536 59.1168 7.3748 58.8053 7.53056C57.7352 8.06558 56.9051 8.98288 56.4792 10.1008L56.0752 11.1614L55.0089 13.1607L54.3545 14.0878C53.7406 14.9574 52.8648 15.608 51.855 15.9447C51.2964 16.1309 50.7751 16.4145 50.3153 16.7823L49.5973 17.3567C49.4581 17.4681 49.3218 17.5831 49.1887 17.7016L49.1978 17.7255L49.2116 17.7626L49.2187 17.782L67.161 11.3056C69.3095 10.5301 71.5764 10.1335 73.8606 10.1335H76.549C77.7574 10.1335 78.9502 10.407 80.0378 10.9335C81.0819 11.4388 81.4734 12.727 80.8871 13.7278L77.9653 18.716C77.3729 19.7273 76.4869 20.5344 75.4249 21.0301C74.6601 21.3871 73.8264 21.572 72.9824 21.572H70.6417C70.5237 21.572 70.4376 21.6837 70.4675 21.7978L70.612 22.3485C70.8208 23.1446 70.6824 23.992 70.231 24.6803C69.832 25.2887 69.2193 25.7253 68.514 25.9039L63.6622 27.1328C62.6771 27.3823 61.6649 27.5085 60.6488 27.5085C59.2853 27.5085 57.9314 27.2813 56.6426 26.8363L53.1384 25.6262L48.8007 24.2792C48.6678 24.2379 48.5399 24.1875 48.4175 24.1287C48.2961 24.3066 48.1667 24.479 48.0298 24.6455C49.8263 25.9635 52.2467 27.6134 52.935 27.6145C54.0095 27.6161 56.224 28.1649 56.8182 28.7775C57.2616 29.2346 57.2017 30.2827 57.1015 30.8463C57.0893 30.915 57.1185 30.9849 57.1775 31.0224C58.408 31.8037 59.0767 33.2253 58.8937 34.6715L58.7766 35.597C58.7656 35.6842 58.8068 35.7697 58.8819 35.8153L64.1819 39.0361C64.4496 39.1987 64.5966 39.5035 64.5573 39.8142C64.4951 40.3056 64.0031 40.6207 63.5307 40.4716L61.6063 39.8643C61.5993 39.8621 61.5929 39.8585 61.5874 39.8537L59.4164 37.9731L57.7325 36.4166L57.006 35.7873C56.2549 35.0129 55.8964 33.9391 56.0318 32.8688L56.081 32.4803C56.0837 32.4586 56.0778 32.4368 56.0644 32.4195L55.7764 32.048C55.6754 31.9178 55.549 31.8094 55.4048 31.7295L54.3679 31.1544C53.1977 30.6539 52.1744 29.8634 51.3945 28.8576L51.2709 28.6982C51.2223 28.6355 51.1653 28.5798 51.1016 28.5325L50.1822 27.8504C49.8545 27.6074 49.516 27.3797 49.1677 27.168C50.6374 28.9637 51.5882 31.3157 51.7489 33.9156L54.3814 36.2781C54.5967 36.4713 54.7868 36.6909 54.9473 36.9315L55.0196 37.04C55.5101 37.7758 55.7719 38.6404 55.7719 39.5247V39.7679V40.3211C55.7719 40.3909 55.81 40.4551 55.8713 40.4885L57.651 41.4593C58.3002 41.8134 58.7041 42.4938 58.7041 43.2332V44.1027C58.7041 44.2251 58.7673 44.3388 58.8713 44.4034L63.1908 47.0885C63.4674 47.2605 63.6356 47.5631 63.6356 47.8888C63.6356 48.4092 63.2137 48.8311 62.6933 48.8311H62.4964C62.2012 48.8311 61.9175 48.7165 61.7051 48.5115L58.2408 45.1666C58.1952 45.1226 58.138 45.0926 58.0759 45.0802L57.1051 44.886C56.9279 44.8506 56.7563 44.7917 56.5947 44.7109C56.0717 44.4494 55.6866 43.9754 55.5378 43.4099L55.1236 41.8361C55.1119 41.7915 55.0849 41.7525 55.0474 41.7257L54.8888 41.6124C54.4127 41.2723 53.975 40.8813 53.5836 40.4464L53.3287 40.1632C53.0923 39.9005 52.8863 39.6119 52.7147 39.303C52.4447 38.8171 52.2633 38.2871 52.1787 37.7377L52.0529 36.9194C52.0447 36.8662 52.0139 36.8191 51.9685 36.7901L51.6507 36.5879C50.9342 42.4035 47.1561 49.9071 42.5281 50.4038L41.9947 51.0967L41.4514 50.391C36.8936 49.7937 33.1815 42.4267 32.4462 36.6677L32.2539 36.7901C32.2085 36.8191 32.1777 36.8662 32.1695 36.9194L32.0436 37.7377C31.9591 38.2871 31.7776 38.8171 31.5077 39.303C31.3361 39.6119 31.1301 39.9005 30.8936 40.1632L30.6388 40.4464C30.2473 40.8813 29.8097 41.2723 29.3335 41.6124L29.1749 41.7257C29.1374 41.7525 29.1105 41.7915 29.0987 41.8361L28.6846 43.4099C28.5358 43.9754 28.1507 44.4494 27.6277 44.7109C27.4661 44.7917 27.2944 44.8506 27.1172 44.886L26.1465 45.0802C26.0844 45.0926 26.0272 45.1226 25.9816 45.1666L22.5172 48.5115C22.3049 48.7165 22.0212 48.8311 21.726 48.8311H21.5291C21.0087 48.8311 20.5868 48.4092 20.5868 47.8888C20.5868 47.5631 20.755 47.2605 21.0316 47.0885L25.3511 44.4034C25.455 44.3388 25.5182 44.2251 25.5182 44.1027V43.2332C25.5182 42.4938 25.9222 41.8134 26.5713 41.4593L28.3511 40.4885C28.4123 40.4551 28.4505 40.3909 28.4505 40.3211V39.7679V39.5247C28.4505 38.6404 28.7122 37.7758 29.2028 37.04L29.2751 36.9315C29.4356 36.6909 29.6257 36.4713 29.8409 36.2781L32.3308 34.0437C32.464 31.4649 33.3741 29.1235 34.7988 27.3178C34.5348 27.4861 34.2767 27.6637 34.025 27.8504L33.1055 28.5325C33.0418 28.5798 32.9849 28.6355 32.9363 28.6982L32.8127 28.8576C32.0328 29.8634 31.0095 30.6539 29.8393 31.1544L28.8024 31.7295C28.6582 31.8094 28.5318 31.9178 28.4308 32.048L28.1428 32.4195C28.1294 32.4368 28.1234 32.4586 28.1262 32.4803L28.1753 32.8688C28.3108 33.9391 27.9523 35.0129 27.2011 35.7873L26.4747 36.4166L24.7908 37.9731L22.6198 39.8537C22.6143 39.8585 22.6078 39.8621 22.6009 39.8643L20.6765 40.4716C20.2041 40.6207 19.7121 40.3056 19.6499 39.8142C19.6106 39.5035 19.7576 39.1987 20.0252 39.0361L25.3253 35.8153C25.4004 35.7697 25.4416 35.6842 25.4306 35.597L25.3135 34.6715C25.1305 33.2253 25.7991 31.8037 27.0297 31.0224C27.0887 30.9849 27.1179 30.915 27.1057 30.8463C27.0055 30.2827 26.9456 29.2346 27.389 28.7775C27.9832 28.1649 30.1977 27.6161 31.2722 27.6145C31.9725 27.6134 34.4659 25.9055 36.2708 24.5768C36.1355 24.4082 36.0078 24.2336 35.8882 24.0535C35.7228 24.1452 35.5461 24.2213 35.3595 24.2792L31.0218 25.6262L27.5176 26.8363C26.2288 27.2813 24.8749 27.5085 23.5115 27.5085C22.4953 27.5085 21.4831 27.3823 20.4981 27.1328L15.6462 25.9039C14.9409 25.7253 14.3283 25.2887 13.9293 24.6803C13.4779 23.992 13.3394 23.1446 13.5483 22.3485L13.6927 21.7978C13.7227 21.6837 13.6366 21.572 13.5186 21.572H11.1778C10.3339 21.572 9.50015 21.3871 8.7354 21.0301C7.67337 20.5344 6.78732 19.7273 6.19495 18.716L3.27313 13.7278C2.68687 12.727 3.07838 11.4388 4.12242 10.9335C5.21009 10.407 6.40281 10.1335 7.6112 10.1335H10.2997C12.5839 10.1335 14.8507 10.5301 16.9992 11.3056L35.115 17.8446C35.1255 17.8151 35.1362 17.7856 35.1471 17.7563C34.9947 17.6184 34.8381 17.4852 34.6775 17.3567L33.9596 16.7823C33.4998 16.4145 32.9785 16.1309 32.4198 15.9447C31.41 15.608 30.5342 14.9574 29.9203 14.0878L29.2659 13.1607L28.1996 11.1614L27.7956 10.1008C27.3697 8.98288 26.5396 8.06558 25.4695 7.53056C25.158 7.3748 24.8304 7.2536 24.4925 7.16912L24.0517 7.05892C23.6232 6.95181 23.2229 6.75355 22.8781 6.47766L22.2928 6.00946C22.1474 5.89311 22.0442 5.73224 21.999 5.55155C21.8888 5.11071 22.1445 4.66109 22.5798 4.53052L22.6655 4.50481C22.9598 4.41652 23.2786 4.47694 23.5202 4.66677L24.4254 5.37792C24.804 5.67544 25.2456 5.88255 25.7165 5.98345L26.1153 6.0689C26.6095 6.17481 27.0723 6.39434 27.467 6.7101C27.9507 7.09707 28.3536 7.57534 28.6529 8.11772L29.9864 10.5347C30.2154 10.9497 30.5104 11.3248 30.8598 11.6451C31.305 12.0532 31.8439 12.3456 32.382 12.6375L32.382 12.6375L32.382 12.6376L32.382 12.6376L32.382 12.6376C32.685 12.8019 32.9876 12.9662 33.2731 13.1508C33.6853 13.4174 34.0885 13.7572 34.5038 14.1073C34.8757 14.4207 35.2572 14.7422 35.6635 15.0266C35.8934 15.1875 36.1664 15.3642 36.468 15.5421C36.5053 15.4994 36.5431 15.4572 36.5814 15.4153V14.807C36.5814 14.2363 36.3391 13.6925 35.9149 13.3107C35.4907 12.9289 35.2485 12.385 35.2485 11.8144V11.6584C35.2485 10.7532 35.7655 9.92758 36.5798 9.5323L39.159 8.28027L30.227 1.49651C29.9372 1.27639 30.165 0.818041 30.5155 0.916169C31.6125 1.22332 32.6302 1.76359 33.4993 2.50008L39.8971 7.92196L41.8978 6.95073C42.0334 6.88489 42.1918 6.88489 42.3274 6.95073L44.0718 7.79752L50.3228 2.50008C51.1918 1.76359 52.2096 1.22332 53.3066 0.916169C53.657 0.818041 53.8849 1.27639 53.595 1.49651L44.8203 8.16087Z" fill="url(#paint0_linear_440_1426)"/></g><defs><filter id="filter0_d_440_1426" x="0.205071" y="0.902588" width="83.75" height="55.7839" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB"><feFlood floodOpacity="0" result="BackgroundImageFix"/><feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/><feOffset dy="2.79493"/><feGaussianBlur stdDeviation="1.39746"/><feComposite in2="hardAlpha" operator="out"/><feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/><feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_440_1426"/><feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_440_1426" result="shape"/></filter><linearGradient id="paint0_linear_440_1426" x1="3" y1="13.6105" x2="81.4509" y2="13.2572" gradientUnits="userSpaceOnUse"><stop stopColor="#8D7F61"/><stop offset="0.151457" stopColor="#F1DCAD"/><stop offset="0.267035" stopColor="#8E7B53"/><stop offset="0.382648" stopColor="#E5D9A9"/><stop offset="0.495657" stopColor="#8A724C"/><stop offset="0.620286" stopColor="#E5D9A9"/><stop offset="0.73364" stopColor="#8E7B53"/><stop offset="0.866263" stopColor="#F1DCAD"/><stop offset="1" stopColor="#8D7F61"/></linearGradient></defs></svg>
          </div>
          <h2>{title.charAt(0).toUpperCase() + title.slice(1)}</h2>
          <button className='gold' onClick={async () => {
            if (!prismaExecutionService.startQuery()) return endClientQuery("Server is Busy", "There may already be a query running. Please try again later.");
            removeAllInputErrors();
            /// Set up variables for data inputs
            const iptSettingsName : HTMLInputElement = document.getElementById('iptSettingsName') as HTMLInputElement;
            const iptSettingsEmail : HTMLInputElement = document.getElementById('iptSettingsEmail') as HTMLInputElement;
            const iptSettingsPhone : HTMLTextAreaElement = document.getElementById('iptSettingsPhone') as HTMLTextAreaElement;
            const iptSettingsFacebook : HTMLTextAreaElement = document.getElementById('iptSettingsFacebook') as HTMLTextAreaElement;
            const iptSettingsInstagram : HTMLInputElement = document.getElementById('iptSettingsInstagram') as HTMLInputElement;
            const iptSettingsPinterest : HTMLInputElement = document.getElementById('iptSettingsPinterest') as HTMLInputElement;
            const iptSettingsPasswordOld : HTMLInputElement = document.getElementById('iptSettingsPasswordOld') as HTMLInputElement;
            const iptSettingsPasswordNew : HTMLInputElement = document.getElementById('iptSettingsPasswordNew') as HTMLInputElement;
            
            const formData = new FormData();
            /// Update new testimonial values
            if (!user) return endClientQuery("Missing User", "Looks like you aren't logged in.")
            let User : Partial<User> = user;
            if (iptSettingsName) User.name = iptSettingsName.value;
            if (iptSettingsEmail) User.email = iptSettingsEmail.value;
            if (iptSettingsPhone) User.phone = iptSettingsPhone.value;
            if (iptSettingsFacebook && iptSettingsEmail.value != '') User.facebook = iptSettingsFacebook.value;
            if (iptSettingsInstagram) User.instagram = iptSettingsInstagram.value;
            if (iptSettingsPinterest) User.pinterest = iptSettingsPinterest.value;
            if (iptSettingsPasswordOld) formData.append("passwordOld", iptSettingsPasswordOld.value);
            if (iptSettingsPasswordNew) formData.append("passwordNew", iptSettingsPasswordNew.value);

            
            StartInfoForm({title: "Updating Settings", desc: "Please wait while your settings update..."});
            let rtn :ReturnField = await updateUser(User, formData) as ReturnField;
            if (rtn.status == 1) UpdateInfoForm({title: rtn.title, desc: rtn.desc}, true, true);
            else {
              UpdateInfoForm({title: rtn.title, desc: rtn.desc}, true, false);
              if (rtn.title.includes('Name')) iptSettingsName.classList.add('inputError');
              if (rtn.title.includes('Email')) iptSettingsEmail.classList.add('inputError');
              if (rtn.title.includes('phone')) iptSettingsPhone.classList.add('inputError');
              if (rtn.title.includes('Facebook')) iptSettingsFacebook.classList.add('inputError');
              if (rtn.title.includes('Instagram')) iptSettingsInstagram.classList.add('inputError');
              if (rtn.title.includes('Pinterest')) iptSettingsPinterest.classList.add('inputError');
              if (rtn.title.includes('Old Password')) iptSettingsPasswordOld.classList.add('inputError');
              else if (rtn.title.includes('Password')) iptSettingsPasswordNew.classList.add('inputError');
            }
            endClientQuery("end");
          }}>Save</button>
        </div>
      </header>
    </>)
  } else {
    return (
      <>
        <SetActive activeText={page} />
        <header>
          <div className="content">
            <div className="Logo">
              <svg width="84" height="57" viewBox="0 0 84 57" fill="none" xmlns="http://www.w3.org/2000/svg"><g filter="url(#filter0_d_440_1426)"><path fillRule="evenodd" clipRule="evenodd" d="M44.8203 8.16087L47.6454 9.5323C48.4597 9.92758 48.9767 10.7532 48.9767 11.6584V11.8144C48.9767 12.385 48.7345 12.9289 48.3103 13.3107C47.8861 13.6925 47.6439 14.2363 47.6439 14.807V15.2759C47.7178 15.3525 47.79 15.4306 47.8604 15.5103C48.1408 15.3432 48.3952 15.178 48.6113 15.0266C49.0176 14.7422 49.3991 14.4207 49.771 14.1073C50.1863 13.7572 50.5895 13.4174 51.0018 13.1508C51.2873 12.9661 51.5899 12.8019 51.8929 12.6375C52.4309 12.3456 52.9699 12.0532 53.415 11.6451C53.7644 11.3248 54.0594 10.9497 54.2884 10.5347L55.6219 8.11772C55.9212 7.57534 56.3241 7.09707 56.8078 6.7101C57.2025 6.39434 57.6653 6.17481 58.1596 6.0689L58.5583 5.98345C59.0292 5.88255 59.4708 5.67544 59.8495 5.37792L60.7546 4.66677C60.9962 4.47694 61.315 4.41652 61.6094 4.50481L61.6951 4.53052C62.1303 4.66109 62.3861 5.11071 62.2758 5.55155C62.2307 5.73224 62.1274 5.89311 61.982 6.00946L61.3967 6.47766C61.0519 6.75355 60.6516 6.95181 60.2231 7.05892L59.7823 7.16912C59.4444 7.2536 59.1168 7.3748 58.8053 7.53056C57.7352 8.06558 56.9051 8.98288 56.4792 10.1008L56.0752 11.1614L55.0089 13.1607L54.3545 14.0878C53.7406 14.9574 52.8648 15.608 51.855 15.9447C51.2964 16.1309 50.7751 16.4145 50.3153 16.7823L49.5973 17.3567C49.4581 17.4681 49.3218 17.5831 49.1887 17.7016L49.1978 17.7255L49.2116 17.7626L49.2187 17.782L67.161 11.3056C69.3095 10.5301 71.5764 10.1335 73.8606 10.1335H76.549C77.7574 10.1335 78.9502 10.407 80.0378 10.9335C81.0819 11.4388 81.4734 12.727 80.8871 13.7278L77.9653 18.716C77.3729 19.7273 76.4869 20.5344 75.4249 21.0301C74.6601 21.3871 73.8264 21.572 72.9824 21.572H70.6417C70.5237 21.572 70.4376 21.6837 70.4675 21.7978L70.612 22.3485C70.8208 23.1446 70.6824 23.992 70.231 24.6803C69.832 25.2887 69.2193 25.7253 68.514 25.9039L63.6622 27.1328C62.6771 27.3823 61.6649 27.5085 60.6488 27.5085C59.2853 27.5085 57.9314 27.2813 56.6426 26.8363L53.1384 25.6262L48.8007 24.2792C48.6678 24.2379 48.5399 24.1875 48.4175 24.1287C48.2961 24.3066 48.1667 24.479 48.0298 24.6455C49.8263 25.9635 52.2467 27.6134 52.935 27.6145C54.0095 27.6161 56.224 28.1649 56.8182 28.7775C57.2616 29.2346 57.2017 30.2827 57.1015 30.8463C57.0893 30.915 57.1185 30.9849 57.1775 31.0224C58.408 31.8037 59.0767 33.2253 58.8937 34.6715L58.7766 35.597C58.7656 35.6842 58.8068 35.7697 58.8819 35.8153L64.1819 39.0361C64.4496 39.1987 64.5966 39.5035 64.5573 39.8142C64.4951 40.3056 64.0031 40.6207 63.5307 40.4716L61.6063 39.8643C61.5993 39.8621 61.5929 39.8585 61.5874 39.8537L59.4164 37.9731L57.7325 36.4166L57.006 35.7873C56.2549 35.0129 55.8964 33.9391 56.0318 32.8688L56.081 32.4803C56.0837 32.4586 56.0778 32.4368 56.0644 32.4195L55.7764 32.048C55.6754 31.9178 55.549 31.8094 55.4048 31.7295L54.3679 31.1544C53.1977 30.6539 52.1744 29.8634 51.3945 28.8576L51.2709 28.6982C51.2223 28.6355 51.1653 28.5798 51.1016 28.5325L50.1822 27.8504C49.8545 27.6074 49.516 27.3797 49.1677 27.168C50.6374 28.9637 51.5882 31.3157 51.7489 33.9156L54.3814 36.2781C54.5967 36.4713 54.7868 36.6909 54.9473 36.9315L55.0196 37.04C55.5101 37.7758 55.7719 38.6404 55.7719 39.5247V39.7679V40.3211C55.7719 40.3909 55.81 40.4551 55.8713 40.4885L57.651 41.4593C58.3002 41.8134 58.7041 42.4938 58.7041 43.2332V44.1027C58.7041 44.2251 58.7673 44.3388 58.8713 44.4034L63.1908 47.0885C63.4674 47.2605 63.6356 47.5631 63.6356 47.8888C63.6356 48.4092 63.2137 48.8311 62.6933 48.8311H62.4964C62.2012 48.8311 61.9175 48.7165 61.7051 48.5115L58.2408 45.1666C58.1952 45.1226 58.138 45.0926 58.0759 45.0802L57.1051 44.886C56.9279 44.8506 56.7563 44.7917 56.5947 44.7109C56.0717 44.4494 55.6866 43.9754 55.5378 43.4099L55.1236 41.8361C55.1119 41.7915 55.0849 41.7525 55.0474 41.7257L54.8888 41.6124C54.4127 41.2723 53.975 40.8813 53.5836 40.4464L53.3287 40.1632C53.0923 39.9005 52.8863 39.6119 52.7147 39.303C52.4447 38.8171 52.2633 38.2871 52.1787 37.7377L52.0529 36.9194C52.0447 36.8662 52.0139 36.8191 51.9685 36.7901L51.6507 36.5879C50.9342 42.4035 47.1561 49.9071 42.5281 50.4038L41.9947 51.0967L41.4514 50.391C36.8936 49.7937 33.1815 42.4267 32.4462 36.6677L32.2539 36.7901C32.2085 36.8191 32.1777 36.8662 32.1695 36.9194L32.0436 37.7377C31.9591 38.2871 31.7776 38.8171 31.5077 39.303C31.3361 39.6119 31.1301 39.9005 30.8936 40.1632L30.6388 40.4464C30.2473 40.8813 29.8097 41.2723 29.3335 41.6124L29.1749 41.7257C29.1374 41.7525 29.1105 41.7915 29.0987 41.8361L28.6846 43.4099C28.5358 43.9754 28.1507 44.4494 27.6277 44.7109C27.4661 44.7917 27.2944 44.8506 27.1172 44.886L26.1465 45.0802C26.0844 45.0926 26.0272 45.1226 25.9816 45.1666L22.5172 48.5115C22.3049 48.7165 22.0212 48.8311 21.726 48.8311H21.5291C21.0087 48.8311 20.5868 48.4092 20.5868 47.8888C20.5868 47.5631 20.755 47.2605 21.0316 47.0885L25.3511 44.4034C25.455 44.3388 25.5182 44.2251 25.5182 44.1027V43.2332C25.5182 42.4938 25.9222 41.8134 26.5713 41.4593L28.3511 40.4885C28.4123 40.4551 28.4505 40.3909 28.4505 40.3211V39.7679V39.5247C28.4505 38.6404 28.7122 37.7758 29.2028 37.04L29.2751 36.9315C29.4356 36.6909 29.6257 36.4713 29.8409 36.2781L32.3308 34.0437C32.464 31.4649 33.3741 29.1235 34.7988 27.3178C34.5348 27.4861 34.2767 27.6637 34.025 27.8504L33.1055 28.5325C33.0418 28.5798 32.9849 28.6355 32.9363 28.6982L32.8127 28.8576C32.0328 29.8634 31.0095 30.6539 29.8393 31.1544L28.8024 31.7295C28.6582 31.8094 28.5318 31.9178 28.4308 32.048L28.1428 32.4195C28.1294 32.4368 28.1234 32.4586 28.1262 32.4803L28.1753 32.8688C28.3108 33.9391 27.9523 35.0129 27.2011 35.7873L26.4747 36.4166L24.7908 37.9731L22.6198 39.8537C22.6143 39.8585 22.6078 39.8621 22.6009 39.8643L20.6765 40.4716C20.2041 40.6207 19.7121 40.3056 19.6499 39.8142C19.6106 39.5035 19.7576 39.1987 20.0252 39.0361L25.3253 35.8153C25.4004 35.7697 25.4416 35.6842 25.4306 35.597L25.3135 34.6715C25.1305 33.2253 25.7991 31.8037 27.0297 31.0224C27.0887 30.9849 27.1179 30.915 27.1057 30.8463C27.0055 30.2827 26.9456 29.2346 27.389 28.7775C27.9832 28.1649 30.1977 27.6161 31.2722 27.6145C31.9725 27.6134 34.4659 25.9055 36.2708 24.5768C36.1355 24.4082 36.0078 24.2336 35.8882 24.0535C35.7228 24.1452 35.5461 24.2213 35.3595 24.2792L31.0218 25.6262L27.5176 26.8363C26.2288 27.2813 24.8749 27.5085 23.5115 27.5085C22.4953 27.5085 21.4831 27.3823 20.4981 27.1328L15.6462 25.9039C14.9409 25.7253 14.3283 25.2887 13.9293 24.6803C13.4779 23.992 13.3394 23.1446 13.5483 22.3485L13.6927 21.7978C13.7227 21.6837 13.6366 21.572 13.5186 21.572H11.1778C10.3339 21.572 9.50015 21.3871 8.7354 21.0301C7.67337 20.5344 6.78732 19.7273 6.19495 18.716L3.27313 13.7278C2.68687 12.727 3.07838 11.4388 4.12242 10.9335C5.21009 10.407 6.40281 10.1335 7.6112 10.1335H10.2997C12.5839 10.1335 14.8507 10.5301 16.9992 11.3056L35.115 17.8446C35.1255 17.8151 35.1362 17.7856 35.1471 17.7563C34.9947 17.6184 34.8381 17.4852 34.6775 17.3567L33.9596 16.7823C33.4998 16.4145 32.9785 16.1309 32.4198 15.9447C31.41 15.608 30.5342 14.9574 29.9203 14.0878L29.2659 13.1607L28.1996 11.1614L27.7956 10.1008C27.3697 8.98288 26.5396 8.06558 25.4695 7.53056C25.158 7.3748 24.8304 7.2536 24.4925 7.16912L24.0517 7.05892C23.6232 6.95181 23.2229 6.75355 22.8781 6.47766L22.2928 6.00946C22.1474 5.89311 22.0442 5.73224 21.999 5.55155C21.8888 5.11071 22.1445 4.66109 22.5798 4.53052L22.6655 4.50481C22.9598 4.41652 23.2786 4.47694 23.5202 4.66677L24.4254 5.37792C24.804 5.67544 25.2456 5.88255 25.7165 5.98345L26.1153 6.0689C26.6095 6.17481 27.0723 6.39434 27.467 6.7101C27.9507 7.09707 28.3536 7.57534 28.6529 8.11772L29.9864 10.5347C30.2154 10.9497 30.5104 11.3248 30.8598 11.6451C31.305 12.0532 31.8439 12.3456 32.382 12.6375L32.382 12.6375L32.382 12.6376L32.382 12.6376L32.382 12.6376C32.685 12.8019 32.9876 12.9662 33.2731 13.1508C33.6853 13.4174 34.0885 13.7572 34.5038 14.1073C34.8757 14.4207 35.2572 14.7422 35.6635 15.0266C35.8934 15.1875 36.1664 15.3642 36.468 15.5421C36.5053 15.4994 36.5431 15.4572 36.5814 15.4153V14.807C36.5814 14.2363 36.3391 13.6925 35.9149 13.3107C35.4907 12.9289 35.2485 12.385 35.2485 11.8144V11.6584C35.2485 10.7532 35.7655 9.92758 36.5798 9.5323L39.159 8.28027L30.227 1.49651C29.9372 1.27639 30.165 0.818041 30.5155 0.916169C31.6125 1.22332 32.6302 1.76359 33.4993 2.50008L39.8971 7.92196L41.8978 6.95073C42.0334 6.88489 42.1918 6.88489 42.3274 6.95073L44.0718 7.79752L50.3228 2.50008C51.1918 1.76359 52.2096 1.22332 53.3066 0.916169C53.657 0.818041 53.8849 1.27639 53.595 1.49651L44.8203 8.16087Z" fill="url(#paint0_linear_440_1426)"/></g><defs><filter id="filter0_d_440_1426" x="0.205071" y="0.902588" width="83.75" height="55.7839" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB"><feFlood floodOpacity="0" result="BackgroundImageFix"/><feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/><feOffset dy="2.79493"/><feGaussianBlur stdDeviation="1.39746"/><feComposite in2="hardAlpha" operator="out"/><feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/><feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_440_1426"/><feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_440_1426" result="shape"/></filter><linearGradient id="paint0_linear_440_1426" x1="3" y1="13.6105" x2="81.4509" y2="13.2572" gradientUnits="userSpaceOnUse"><stop stopColor="#8D7F61"/><stop offset="0.151457" stopColor="#F1DCAD"/><stop offset="0.267035" stopColor="#8E7B53"/><stop offset="0.382648" stopColor="#E5D9A9"/><stop offset="0.495657" stopColor="#8A724C"/><stop offset="0.620286" stopColor="#E5D9A9"/><stop offset="0.73364" stopColor="#8E7B53"/><stop offset="0.866263" stopColor="#F1DCAD"/><stop offset="1" stopColor="#8D7F61"/></linearGradient></defs></svg>
            </div>
            <h2>{page.charAt(0).toUpperCase() + page.slice(1)}</h2>
          </div>
        </header>
      </>
    )
  }
  
  
}

export default CMSHeader
